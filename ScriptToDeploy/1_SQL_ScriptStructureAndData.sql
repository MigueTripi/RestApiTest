/*
Deployment script for ApiTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

IF DB_ID (N'ApiTest') IS NOT NULL
DROP DATABASE [ApiTest];
GO
CREATE DATABASE [ApiTest];  
GO  

USE [ApiTest]


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [UserId]   INT          IDENTITY (1, 1) NOT NULL,
    [Nombre]   VARCHAR (50) NOT NULL,
    [Apellido] VARCHAR (50) NOT NULL,
    [Email]    VARCHAR (50) NOT NULL,
    [Password] VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Users_UserId] PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[CreateUser]...';


GO
CREATE PROCEDURE [dbo].[CreateUser](
	@UserId INT,
	@Nombre VARCHAR(50),
	@Apellido VARCHAR(50),
	@Email VARCHAR(50),
	@Password VARCHAR(50)) 
AS
BEGIN
	DECLARE @Result INT = @UserId
	IF(ISNULL(@UserId, 0) = 0)
	BEGIN
		INSERT INTO Users ([Nombre], [Apellido], [Email], [Password])
		VALUES (@Nombre, @Apellido, @Email, @Password) 
		SET @Result = SCOPE_IDENTITY()
	END
	ELSE
	BEGIN
		UPDATE Users SET
			[Nombre] = @Nombre, 
			[Apellido] = @Apellido,
			[Email] = @Email, 
			[Password] = @Password
		WHERE [UserId] = @UserId
	END
	SELECT @UserId
END
GO
PRINT N'Creating [dbo].[DeleteUser]...';


GO
CREATE PROCEDURE [dbo].[DeleteUser]
	@UserId int 
AS
BEGIN
	DELETE FROM Users 
	WHERE UserId = @UserId
END
GO
PRINT N'Creating [dbo].[GetAllUsers]...';


GO
CREATE PROCEDURE [dbo].[GetAllUsers]
AS
BEGIN
	SELECT 
		U.UserId,
		U.Nombre,
		U.Apellido,
		U.Email,
		U.[Password]
	FROM Users U
END
GO
PRINT N'Creating [dbo].[GetUser]...';


GO
CREATE PROCEDURE [dbo].[GetUser]
	@UserId int 
AS
BEGIN

	SELECT 
		U.UserId,
		U.Nombre,
		U.Apellido,
		U.Email,
		U.[Password]
	FROM Users U
	WHERE U.UserId = @UserId
END
GO
PRINT N'Update complete.';


GO

PRINT 'Add users and login data started'

USE [master]
GO

/****** Object:  Login [UserLogin]    Script Date: 21/1/2019 20:51:24 ******/
DROP LOGIN [UserLogin]
GO

/* For security reasons the login is created disabled and with a random password. */
/****** Object:  Login [UserLogin]    Script Date: 21/1/2019 20:51:24 ******/
CREATE LOGIN [UserLogin] WITH PASSWORD='AAAaaa1_', DEFAULT_DATABASE=[ApiTest], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=ON, CHECK_POLICY=ON
print 'LOGIN [UserLogin]  created successfully'
GO

USE [ApiTest]
GO

/****** Object:  User [UserLogin]    Script Date: 21/1/2019 20:53:17 ******/
DROP USER [UserLogin]
GO

/****** Object:  User [UserLogin]    Script Date: 21/1/2019 20:53:17 ******/
CREATE USER [UserLogin] FOR LOGIN [UserLogin] WITH DEFAULT_SCHEMA=[dbo]
print 'USER [UserLogin] created successfully'
GO


ALTER SERVER ROLE [sysadmin] ADD MEMBER [UserLogin]
GO
PRINT 'User and Login data finished'


GO

PRINT 'Adding dummy data into users table'

MERGE INTO dbo.Users AS Target
USING(
	VALUES
	(1, 'Migue1', 'Tripi1', '1mail@mail.com', '123'),
	(2, 'Migue2', 'Tripi2', '2mail@mail.com', '456'),
	(3, 'Migue3', 'Tripi3', '3mail@mail.com', '789')
	) AS Source (UserId, Nombre, apellido, email, [password]) 
	ON Target.UserId = Source.UserId AND Target.Apellido = Source.apellido
WHEN NOT MATCHED BY TARGET THEN  
INSERT (Nombre, apellido, email, [password]) VALUES (Nombre, apellido, email, [password]);

PRINT 'Dummy data had been created'
